--- a/libavformat/avio.h	2016-01-16 13:54:30.822506061 +0200
+++ b/libavformat/avio.h	2016-01-16 13:56:34.175117736 +0200
@@ -191,13 +191,6 @@
     int writeout_count;
 
     /**
-     * Original buffer size
-     * used internally after probing and ensure seekback to reset the buffer size
-     * This field is internal to libavformat and access from outside is not allowed.
-     */
-    int orig_buffer_size;
-
-    /**
      * Threshold to favor readahead over seek.
      * This is current internal only, do not use from outside.
      */
--- a/libavformat/aviobuf.c	2015-12-20 04:07:49.000000000 +0200
+++ b/libavformat/aviobuf.c	2016-01-16 14:03:01.233037056 +0200
@@ -33,7 +33,7 @@
 #include "url.h"
 #include <stdarg.h>
 
-#define IO_BUFFER_SIZE 32768
+#define IO_BUFFER_SIZE 262144
 
 /**
  * Do seeks within this distance ahead of the current buffer by skipping
@@ -79,7 +79,6 @@
                   int64_t (*seek)(void *opaque, int64_t offset, int whence))
 {
     s->buffer      = buffer;
-    s->orig_buffer_size =
     s->buffer_size = buffer_size;
     s->buf_ptr     = buffer;
     s->opaque      = opaque;
@@ -464,16 +463,16 @@
     }
 
     /* make buffer smaller in case it ended up large after probing */
-    if (s->read_packet && s->orig_buffer_size && s->buffer_size > s->orig_buffer_size) {
+    if (s->read_packet && s->buffer_size > max_buffer_size) {
         if (dst == s->buffer) {
-            int ret = ffio_set_buf_size(s, s->orig_buffer_size);
+            int ret = ffio_set_buf_size(s, max_buffer_size);
             if (ret < 0)
                 av_log(s, AV_LOG_WARNING, "Failed to decrease buffer size\n");
 
             s->checksum_ptr = dst = s->buffer;
         }
-        av_assert0(len >= s->orig_buffer_size);
-        len = s->orig_buffer_size;
+        av_assert0(len >= max_buffer_size);
+        len = max_buffer_size;
     }
 
     if (s->read_packet)
@@ -845,7 +844,6 @@
 
     av_free(s->buffer);
     s->buffer = buffer;
-    s->orig_buffer_size =
     s->buffer_size = buf_size;
     s->buf_ptr = buffer;
     url_resetbuf(s, s->write_flag ? AVIO_FLAG_WRITE : AVIO_FLAG_READ);
